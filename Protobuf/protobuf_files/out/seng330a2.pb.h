// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: seng330a2.proto

#ifndef PROTOBUF_seng330a2_2eproto__INCLUDED
#define PROTOBUF_seng330a2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace seng330a2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_seng330a2_2eproto();
void protobuf_AssignDesc_seng330a2_2eproto();
void protobuf_ShutdownFile_seng330a2_2eproto();

class Member;
class Customer;
class Staff;
class MemberList;

enum Member_Type {
  Member_Type_CUSTOMER = 0,
  Member_Type_STAFF = 1
};
bool Member_Type_IsValid(int value);
const Member_Type Member_Type_Type_MIN = Member_Type_CUSTOMER;
const Member_Type Member_Type_Type_MAX = Member_Type_STAFF;
const int Member_Type_Type_ARRAYSIZE = Member_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Member_Type_descriptor();
inline const ::std::string& Member_Type_Name(Member_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Member_Type_descriptor(), value);
}
inline bool Member_Type_Parse(
    const ::std::string& name, Member_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Member_Type>(
    Member_Type_descriptor(), name, value);
}
enum Customer_SubscriptionLevel {
  Customer_SubscriptionLevel_INACTIVE = 0,
  Customer_SubscriptionLevel_BASIC = 1,
  Customer_SubscriptionLevel_PREMIUM = 2,
  Customer_SubscriptionLevel_DELUXE = 3
};
bool Customer_SubscriptionLevel_IsValid(int value);
const Customer_SubscriptionLevel Customer_SubscriptionLevel_SubscriptionLevel_MIN = Customer_SubscriptionLevel_INACTIVE;
const Customer_SubscriptionLevel Customer_SubscriptionLevel_SubscriptionLevel_MAX = Customer_SubscriptionLevel_DELUXE;
const int Customer_SubscriptionLevel_SubscriptionLevel_ARRAYSIZE = Customer_SubscriptionLevel_SubscriptionLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* Customer_SubscriptionLevel_descriptor();
inline const ::std::string& Customer_SubscriptionLevel_Name(Customer_SubscriptionLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    Customer_SubscriptionLevel_descriptor(), value);
}
inline bool Customer_SubscriptionLevel_Parse(
    const ::std::string& name, Customer_SubscriptionLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Customer_SubscriptionLevel>(
    Customer_SubscriptionLevel_descriptor(), name, value);
}
enum Staff_Clearance {
  Staff_Clearance_GENERAL = 0,
  Staff_Clearance_MANAGER = 1,
  Staff_Clearance_ADMINISTRATOR = 2
};
bool Staff_Clearance_IsValid(int value);
const Staff_Clearance Staff_Clearance_Clearance_MIN = Staff_Clearance_GENERAL;
const Staff_Clearance Staff_Clearance_Clearance_MAX = Staff_Clearance_ADMINISTRATOR;
const int Staff_Clearance_Clearance_ARRAYSIZE = Staff_Clearance_Clearance_MAX + 1;

const ::google::protobuf::EnumDescriptor* Staff_Clearance_descriptor();
inline const ::std::string& Staff_Clearance_Name(Staff_Clearance value) {
  return ::google::protobuf::internal::NameOfEnum(
    Staff_Clearance_descriptor(), value);
}
inline bool Staff_Clearance_Parse(
    const ::std::string& name, Staff_Clearance* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Staff_Clearance>(
    Staff_Clearance_descriptor(), name, value);
}
// ===================================================================

class Member : public ::google::protobuf::Message {
 public:
  Member();
  virtual ~Member();

  Member(const Member& from);

  inline Member& operator=(const Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Member& default_instance();

  void Swap(Member* other);

  // implements Message ----------------------------------------------

  inline Member* New() const { return New(NULL); }

  Member* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Member& from);
  void MergeFrom(const Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Member_Type Type;
  static const Type CUSTOMER = Member_Type_CUSTOMER;
  static const Type STAFF = Member_Type_STAFF;
  static inline bool Type_IsValid(int value) {
    return Member_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Member_Type_Type_MIN;
  static const Type Type_MAX =
    Member_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Member_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Member_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Member_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Member_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // required uint64 membership_id = 3;
  inline bool has_membership_id() const;
  inline void clear_membership_id();
  static const int kMembershipIdFieldNumber = 3;
  inline ::google::protobuf::uint64 membership_id() const;
  inline void set_membership_id(::google::protobuf::uint64 value);

  // required uint64 bracelet_id = 4;
  inline bool has_bracelet_id() const;
  inline void clear_bracelet_id();
  static const int kBraceletIdFieldNumber = 4;
  inline ::google::protobuf::uint64 bracelet_id() const;
  inline void set_bracelet_id(::google::protobuf::uint64 value);

  // required .seng330a2.Member.Type member_type = 5;
  inline bool has_member_type() const;
  inline void clear_member_type();
  static const int kMemberTypeFieldNumber = 5;
  inline ::seng330a2::Member_Type member_type() const;
  inline void set_member_type(::seng330a2::Member_Type value);

  // optional .seng330a2.Customer customer = 6;
  inline bool has_customer() const;
  inline void clear_customer();
  static const int kCustomerFieldNumber = 6;
  inline const ::seng330a2::Customer& customer() const;
  inline ::seng330a2::Customer* mutable_customer();
  inline ::seng330a2::Customer* release_customer();
  inline void set_allocated_customer(::seng330a2::Customer* customer);

  // optional .seng330a2.Staff staff = 7;
  inline bool has_staff() const;
  inline void clear_staff();
  static const int kStaffFieldNumber = 7;
  inline const ::seng330a2::Staff& staff() const;
  inline ::seng330a2::Staff* mutable_staff();
  inline ::seng330a2::Staff* release_staff();
  inline void set_allocated_staff(::seng330a2::Staff* staff);

  // @@protoc_insertion_point(class_scope:seng330a2.Member)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_membership_id();
  inline void clear_has_membership_id();
  inline void set_has_bracelet_id();
  inline void clear_has_bracelet_id();
  inline void set_has_member_type();
  inline void clear_has_member_type();
  inline void set_has_customer();
  inline void clear_has_customer();
  inline void set_has_staff();
  inline void clear_has_staff();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint64 membership_id_;
  ::google::protobuf::uint64 bracelet_id_;
  ::seng330a2::Customer* customer_;
  ::seng330a2::Staff* staff_;
  int member_type_;
  friend void  protobuf_AddDesc_seng330a2_2eproto();
  friend void protobuf_AssignDesc_seng330a2_2eproto();
  friend void protobuf_ShutdownFile_seng330a2_2eproto();

  void InitAsDefaultInstance();
  static Member* default_instance_;
};
// -------------------------------------------------------------------

class Customer : public ::google::protobuf::Message {
 public:
  Customer();
  virtual ~Customer();

  Customer(const Customer& from);

  inline Customer& operator=(const Customer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Customer& default_instance();

  void Swap(Customer* other);

  // implements Message ----------------------------------------------

  inline Customer* New() const { return New(NULL); }

  Customer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Customer& from);
  void MergeFrom(const Customer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Customer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Customer_SubscriptionLevel SubscriptionLevel;
  static const SubscriptionLevel INACTIVE = Customer_SubscriptionLevel_INACTIVE;
  static const SubscriptionLevel BASIC = Customer_SubscriptionLevel_BASIC;
  static const SubscriptionLevel PREMIUM = Customer_SubscriptionLevel_PREMIUM;
  static const SubscriptionLevel DELUXE = Customer_SubscriptionLevel_DELUXE;
  static inline bool SubscriptionLevel_IsValid(int value) {
    return Customer_SubscriptionLevel_IsValid(value);
  }
  static const SubscriptionLevel SubscriptionLevel_MIN =
    Customer_SubscriptionLevel_SubscriptionLevel_MIN;
  static const SubscriptionLevel SubscriptionLevel_MAX =
    Customer_SubscriptionLevel_SubscriptionLevel_MAX;
  static const int SubscriptionLevel_ARRAYSIZE =
    Customer_SubscriptionLevel_SubscriptionLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SubscriptionLevel_descriptor() {
    return Customer_SubscriptionLevel_descriptor();
  }
  static inline const ::std::string& SubscriptionLevel_Name(SubscriptionLevel value) {
    return Customer_SubscriptionLevel_Name(value);
  }
  static inline bool SubscriptionLevel_Parse(const ::std::string& name,
      SubscriptionLevel* value) {
    return Customer_SubscriptionLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 credit_card_num = 1;
  inline bool has_credit_card_num() const;
  inline void clear_credit_card_num();
  static const int kCreditCardNumFieldNumber = 1;
  inline ::google::protobuf::uint64 credit_card_num() const;
  inline void set_credit_card_num(::google::protobuf::uint64 value);

  // required int32 gym_credits = 2;
  inline bool has_gym_credits() const;
  inline void clear_gym_credits();
  static const int kGymCreditsFieldNumber = 2;
  inline ::google::protobuf::int32 gym_credits() const;
  inline void set_gym_credits(::google::protobuf::int32 value);

  // required .seng330a2.Customer.SubscriptionLevel subscription_level = 3;
  inline bool has_subscription_level() const;
  inline void clear_subscription_level();
  static const int kSubscriptionLevelFieldNumber = 3;
  inline ::seng330a2::Customer_SubscriptionLevel subscription_level() const;
  inline void set_subscription_level(::seng330a2::Customer_SubscriptionLevel value);

  // @@protoc_insertion_point(class_scope:seng330a2.Customer)
 private:
  inline void set_has_credit_card_num();
  inline void clear_has_credit_card_num();
  inline void set_has_gym_credits();
  inline void clear_has_gym_credits();
  inline void set_has_subscription_level();
  inline void clear_has_subscription_level();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 credit_card_num_;
  ::google::protobuf::int32 gym_credits_;
  int subscription_level_;
  friend void  protobuf_AddDesc_seng330a2_2eproto();
  friend void protobuf_AssignDesc_seng330a2_2eproto();
  friend void protobuf_ShutdownFile_seng330a2_2eproto();

  void InitAsDefaultInstance();
  static Customer* default_instance_;
};
// -------------------------------------------------------------------

class Staff : public ::google::protobuf::Message {
 public:
  Staff();
  virtual ~Staff();

  Staff(const Staff& from);

  inline Staff& operator=(const Staff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Staff& default_instance();

  void Swap(Staff* other);

  // implements Message ----------------------------------------------

  inline Staff* New() const { return New(NULL); }

  Staff* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Staff& from);
  void MergeFrom(const Staff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Staff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Staff_Clearance Clearance;
  static const Clearance GENERAL = Staff_Clearance_GENERAL;
  static const Clearance MANAGER = Staff_Clearance_MANAGER;
  static const Clearance ADMINISTRATOR = Staff_Clearance_ADMINISTRATOR;
  static inline bool Clearance_IsValid(int value) {
    return Staff_Clearance_IsValid(value);
  }
  static const Clearance Clearance_MIN =
    Staff_Clearance_Clearance_MIN;
  static const Clearance Clearance_MAX =
    Staff_Clearance_Clearance_MAX;
  static const int Clearance_ARRAYSIZE =
    Staff_Clearance_Clearance_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Clearance_descriptor() {
    return Staff_Clearance_descriptor();
  }
  static inline const ::std::string& Clearance_Name(Clearance value) {
    return Staff_Clearance_Name(value);
  }
  static inline bool Clearance_Parse(const ::std::string& name,
      Clearance* value) {
    return Staff_Clearance_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 employee_id = 1;
  inline bool has_employee_id() const;
  inline void clear_employee_id();
  static const int kEmployeeIdFieldNumber = 1;
  inline ::google::protobuf::uint64 employee_id() const;
  inline void set_employee_id(::google::protobuf::uint64 value);

  // required .seng330a2.Staff.Clearance staff_clearance = 3;
  inline bool has_staff_clearance() const;
  inline void clear_staff_clearance();
  static const int kStaffClearanceFieldNumber = 3;
  inline ::seng330a2::Staff_Clearance staff_clearance() const;
  inline void set_staff_clearance(::seng330a2::Staff_Clearance value);

  // @@protoc_insertion_point(class_scope:seng330a2.Staff)
 private:
  inline void set_has_employee_id();
  inline void clear_has_employee_id();
  inline void set_has_staff_clearance();
  inline void clear_has_staff_clearance();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 employee_id_;
  int staff_clearance_;
  friend void  protobuf_AddDesc_seng330a2_2eproto();
  friend void protobuf_AssignDesc_seng330a2_2eproto();
  friend void protobuf_ShutdownFile_seng330a2_2eproto();

  void InitAsDefaultInstance();
  static Staff* default_instance_;
};
// -------------------------------------------------------------------

class MemberList : public ::google::protobuf::Message {
 public:
  MemberList();
  virtual ~MemberList();

  MemberList(const MemberList& from);

  inline MemberList& operator=(const MemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberList& default_instance();

  void Swap(MemberList* other);

  // implements Message ----------------------------------------------

  inline MemberList* New() const { return New(NULL); }

  MemberList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberList& from);
  void MergeFrom(const MemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .seng330a2.Member member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::seng330a2::Member& member(int index) const;
  inline ::seng330a2::Member* mutable_member(int index);
  inline ::seng330a2::Member* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::seng330a2::Member >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::seng330a2::Member >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:seng330a2.MemberList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::seng330a2::Member > member_;
  friend void  protobuf_AddDesc_seng330a2_2eproto();
  friend void protobuf_AssignDesc_seng330a2_2eproto();
  friend void protobuf_ShutdownFile_seng330a2_2eproto();

  void InitAsDefaultInstance();
  static MemberList* default_instance_;
};
// ===================================================================


// ===================================================================

// Member

// required string name = 1;
inline bool Member::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Member::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Member::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Member::name() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seng330a2.Member.name)
}
inline void Member::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seng330a2.Member.name)
}
inline void Member::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seng330a2.Member.name)
}
inline ::std::string* Member::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:seng330a2.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Member::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:seng330a2.Member.name)
}

// required string address = 2;
inline bool Member::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Member::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Member::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Member::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& Member::address() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seng330a2.Member.address)
}
inline void Member::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seng330a2.Member.address)
}
inline void Member::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seng330a2.Member.address)
}
inline ::std::string* Member::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:seng330a2.Member.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Member::release_address() {
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:seng330a2.Member.address)
}

// required uint64 membership_id = 3;
inline bool Member::has_membership_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Member::set_has_membership_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Member::clear_has_membership_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Member::clear_membership_id() {
  membership_id_ = GOOGLE_ULONGLONG(0);
  clear_has_membership_id();
}
inline ::google::protobuf::uint64 Member::membership_id() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.membership_id)
  return membership_id_;
}
inline void Member::set_membership_id(::google::protobuf::uint64 value) {
  set_has_membership_id();
  membership_id_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Member.membership_id)
}

// required uint64 bracelet_id = 4;
inline bool Member::has_bracelet_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Member::set_has_bracelet_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Member::clear_has_bracelet_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Member::clear_bracelet_id() {
  bracelet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_bracelet_id();
}
inline ::google::protobuf::uint64 Member::bracelet_id() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.bracelet_id)
  return bracelet_id_;
}
inline void Member::set_bracelet_id(::google::protobuf::uint64 value) {
  set_has_bracelet_id();
  bracelet_id_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Member.bracelet_id)
}

// required .seng330a2.Member.Type member_type = 5;
inline bool Member::has_member_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Member::set_has_member_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Member::clear_has_member_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Member::clear_member_type() {
  member_type_ = 0;
  clear_has_member_type();
}
inline ::seng330a2::Member_Type Member::member_type() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.member_type)
  return static_cast< ::seng330a2::Member_Type >(member_type_);
}
inline void Member::set_member_type(::seng330a2::Member_Type value) {
  assert(::seng330a2::Member_Type_IsValid(value));
  set_has_member_type();
  member_type_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Member.member_type)
}

// optional .seng330a2.Customer customer = 6;
inline bool Member::has_customer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Member::set_has_customer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Member::clear_has_customer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Member::clear_customer() {
  if (customer_ != NULL) customer_->::seng330a2::Customer::Clear();
  clear_has_customer();
}
inline const ::seng330a2::Customer& Member::customer() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.customer)
  return customer_ != NULL ? *customer_ : *default_instance_->customer_;
}
inline ::seng330a2::Customer* Member::mutable_customer() {
  set_has_customer();
  if (customer_ == NULL) {
    customer_ = new ::seng330a2::Customer;
  }
  // @@protoc_insertion_point(field_mutable:seng330a2.Member.customer)
  return customer_;
}
inline ::seng330a2::Customer* Member::release_customer() {
  clear_has_customer();
  ::seng330a2::Customer* temp = customer_;
  customer_ = NULL;
  return temp;
}
inline void Member::set_allocated_customer(::seng330a2::Customer* customer) {
  delete customer_;
  customer_ = customer;
  if (customer) {
    set_has_customer();
  } else {
    clear_has_customer();
  }
  // @@protoc_insertion_point(field_set_allocated:seng330a2.Member.customer)
}

// optional .seng330a2.Staff staff = 7;
inline bool Member::has_staff() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Member::set_has_staff() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Member::clear_has_staff() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Member::clear_staff() {
  if (staff_ != NULL) staff_->::seng330a2::Staff::Clear();
  clear_has_staff();
}
inline const ::seng330a2::Staff& Member::staff() const {
  // @@protoc_insertion_point(field_get:seng330a2.Member.staff)
  return staff_ != NULL ? *staff_ : *default_instance_->staff_;
}
inline ::seng330a2::Staff* Member::mutable_staff() {
  set_has_staff();
  if (staff_ == NULL) {
    staff_ = new ::seng330a2::Staff;
  }
  // @@protoc_insertion_point(field_mutable:seng330a2.Member.staff)
  return staff_;
}
inline ::seng330a2::Staff* Member::release_staff() {
  clear_has_staff();
  ::seng330a2::Staff* temp = staff_;
  staff_ = NULL;
  return temp;
}
inline void Member::set_allocated_staff(::seng330a2::Staff* staff) {
  delete staff_;
  staff_ = staff;
  if (staff) {
    set_has_staff();
  } else {
    clear_has_staff();
  }
  // @@protoc_insertion_point(field_set_allocated:seng330a2.Member.staff)
}

// -------------------------------------------------------------------

// Customer

// required uint64 credit_card_num = 1;
inline bool Customer::has_credit_card_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Customer::set_has_credit_card_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Customer::clear_has_credit_card_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Customer::clear_credit_card_num() {
  credit_card_num_ = GOOGLE_ULONGLONG(0);
  clear_has_credit_card_num();
}
inline ::google::protobuf::uint64 Customer::credit_card_num() const {
  // @@protoc_insertion_point(field_get:seng330a2.Customer.credit_card_num)
  return credit_card_num_;
}
inline void Customer::set_credit_card_num(::google::protobuf::uint64 value) {
  set_has_credit_card_num();
  credit_card_num_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Customer.credit_card_num)
}

// required int32 gym_credits = 2;
inline bool Customer::has_gym_credits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Customer::set_has_gym_credits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Customer::clear_has_gym_credits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Customer::clear_gym_credits() {
  gym_credits_ = 0;
  clear_has_gym_credits();
}
inline ::google::protobuf::int32 Customer::gym_credits() const {
  // @@protoc_insertion_point(field_get:seng330a2.Customer.gym_credits)
  return gym_credits_;
}
inline void Customer::set_gym_credits(::google::protobuf::int32 value) {
  set_has_gym_credits();
  gym_credits_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Customer.gym_credits)
}

// required .seng330a2.Customer.SubscriptionLevel subscription_level = 3;
inline bool Customer::has_subscription_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Customer::set_has_subscription_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Customer::clear_has_subscription_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Customer::clear_subscription_level() {
  subscription_level_ = 0;
  clear_has_subscription_level();
}
inline ::seng330a2::Customer_SubscriptionLevel Customer::subscription_level() const {
  // @@protoc_insertion_point(field_get:seng330a2.Customer.subscription_level)
  return static_cast< ::seng330a2::Customer_SubscriptionLevel >(subscription_level_);
}
inline void Customer::set_subscription_level(::seng330a2::Customer_SubscriptionLevel value) {
  assert(::seng330a2::Customer_SubscriptionLevel_IsValid(value));
  set_has_subscription_level();
  subscription_level_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Customer.subscription_level)
}

// -------------------------------------------------------------------

// Staff

// required uint64 employee_id = 1;
inline bool Staff::has_employee_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Staff::set_has_employee_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Staff::clear_has_employee_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Staff::clear_employee_id() {
  employee_id_ = GOOGLE_ULONGLONG(0);
  clear_has_employee_id();
}
inline ::google::protobuf::uint64 Staff::employee_id() const {
  // @@protoc_insertion_point(field_get:seng330a2.Staff.employee_id)
  return employee_id_;
}
inline void Staff::set_employee_id(::google::protobuf::uint64 value) {
  set_has_employee_id();
  employee_id_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Staff.employee_id)
}

// required .seng330a2.Staff.Clearance staff_clearance = 3;
inline bool Staff::has_staff_clearance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Staff::set_has_staff_clearance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Staff::clear_has_staff_clearance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Staff::clear_staff_clearance() {
  staff_clearance_ = 0;
  clear_has_staff_clearance();
}
inline ::seng330a2::Staff_Clearance Staff::staff_clearance() const {
  // @@protoc_insertion_point(field_get:seng330a2.Staff.staff_clearance)
  return static_cast< ::seng330a2::Staff_Clearance >(staff_clearance_);
}
inline void Staff::set_staff_clearance(::seng330a2::Staff_Clearance value) {
  assert(::seng330a2::Staff_Clearance_IsValid(value));
  set_has_staff_clearance();
  staff_clearance_ = value;
  // @@protoc_insertion_point(field_set:seng330a2.Staff.staff_clearance)
}

// -------------------------------------------------------------------

// MemberList

// repeated .seng330a2.Member member = 1;
inline int MemberList::member_size() const {
  return member_.size();
}
inline void MemberList::clear_member() {
  member_.Clear();
}
inline const ::seng330a2::Member& MemberList::member(int index) const {
  // @@protoc_insertion_point(field_get:seng330a2.MemberList.member)
  return member_.Get(index);
}
inline ::seng330a2::Member* MemberList::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:seng330a2.MemberList.member)
  return member_.Mutable(index);
}
inline ::seng330a2::Member* MemberList::add_member() {
  // @@protoc_insertion_point(field_add:seng330a2.MemberList.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::seng330a2::Member >&
MemberList::member() const {
  // @@protoc_insertion_point(field_list:seng330a2.MemberList.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::seng330a2::Member >*
MemberList::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:seng330a2.MemberList.member)
  return &member_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace seng330a2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::seng330a2::Member_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::seng330a2::Member_Type>() {
  return ::seng330a2::Member_Type_descriptor();
}
template <> struct is_proto_enum< ::seng330a2::Customer_SubscriptionLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::seng330a2::Customer_SubscriptionLevel>() {
  return ::seng330a2::Customer_SubscriptionLevel_descriptor();
}
template <> struct is_proto_enum< ::seng330a2::Staff_Clearance> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::seng330a2::Staff_Clearance>() {
  return ::seng330a2::Staff_Clearance_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_seng330a2_2eproto__INCLUDED
